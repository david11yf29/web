{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,ADGC,ICHD,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,ADKA,ICLM,ADKN,ICLU,ADKV,GCLa,IAAI,MAAA,CAAA,IAAJ,CAAS,EAAT,CAAb;AAEA,ADGA,ICHI,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAChB,ADEF,ECFE,OAAO,CAAC,EDEV,CCFE,CAAY,WAAZ;AACD,ADIC,CCNF;AAGA,ADKE,ICLE,CAAC,EAAL,CAAQ,GDKN,IAAA,CCLF,ADKsB,ECLJ,EDKhB,EAAmC,QCLnB;AAChB,ADIoB,ECJpB,OAAO,ADIa,CCJZ,GAAR,ADIoB,CCJR,EDIQ,IAAA,KCJpB;AACD,ADAC,CCFF,QDEE,MAAA,GAAwC,EAAxC;ACCF,ADEyC,ICFrC,CAAC,EAAL,CAAQ,MAAR,EAAgB,YAAA;AACd,EAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ;AACD,ADEC,CCJF,CDIE,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,SAAJ,EAAqB;ACAvB,ADCI,ICDA,CAAC,MDCM,CCDX,CAAa,GDCG,GCDhB,CDCW,CAAU,SAAV,CAAP;AACD,GAFD;;AAEC;;AAED,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;AACnB,IAAA,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;AACD,GAFD;;AAIA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACtC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACtC;AACD;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AACvB,MAAA,QAAQ;AACT,KAFD;AAGD,GAVD;;AAWF,SAAA,IAAA;AAhCA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string;\n  age?: number;\n};\n\ntype Callback = () => void;\n\nexport class User {\n\n  events: { [key: string]: Callback[] } = {};\n  // this.events['asdf'] = []\n\n  constructor(private data: UserProps) {}\n\n  get(proprName: string): (number | string) {\n    return this.data[proprName];\n  };\n\n  set(update: UserProps): void {\n    Object.assign(this.data, update);\n  }\n\n  on(eventName: string, callback: Callback): void {\n    const handlers = this.events[eventName] || [];\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  trigger(eventName: string): void {\n    const handlers = this.events[eventName];\n\n    if (!handlers || handlers.length === 0) {\n      return;\n    }\n\n    handlers.forEach(callback => {\n      callback();\n    })\n  }\n}","import { User } from './models/User';\n\nconst user = new User({})\n\nuser.on('change', () => {\n  console.log('Change #1');\n});\nuser.on('change', () => {\n  console.log('Change #2')\n});\nuser.on('save', () => {\n  console.log('Save was triggered')\n});\n\nuser.trigger('save');\n"]}